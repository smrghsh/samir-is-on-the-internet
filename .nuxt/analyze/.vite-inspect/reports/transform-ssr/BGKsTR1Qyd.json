{
  "resolvedId": "/Users/vertex/code/samir-is-on-the-internet/components/twist.vue",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<script>\nimport * as THREE from \"three\";\nimport { MeshLineGeometry, MeshLineMaterial, raycast } from \"meshline\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls.js\";\n// import * as dat from 'dat.gui'\nimport modMeshLineVertexShader from \"../assets/shaders/modMeshLine/vertex.glsl\";\nimport modMeshLineFragmentShader from \"../assets/shaders/modMeshLine/fragment.glsl\";\nimport { Font, SubtractiveBlending } from \"three\";\n\nexport default {\n  // unmount() {\n    // leo says destroy it here\n  // }\n  mounted() {\n    const sizes = {\n      width: window.innerWidth,\n      height: window.innerHeight,\n    };\n      /**\n     * Sizes\n     */\n  // Window resizing\n    window.addEventListener(\"resize\", () => {\n      // Update sizes\n      sizes.width = window.innerWidth;\n      sizes.height = window.innerHeight;\n\n      // Update camera\n      camera.aspect = sizes.width / sizes.height;\n      camera.updateProjectionMatrix();\n\n      // Update renderer\n      renderer.setSize(sizes.width, sizes.height);\n      renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n    });\n\n\n//Palette\nconst backgroundColor = new THREE.Color(\"beige\");\n// const backgroundColor = new THREE.Color(\"black\")\n// const backgroundColor = new THREE.Color(\"#D9B9AD\");\n\n/**\n * Base\n */\n\n// Canvas\nconst canvas = document.querySelector(\"canvas.webgl\");\n\n// Scene\nconst scene = new THREE.Scene();\nscene.background = backgroundColor;\n\n/**\n * AxesHelper\n */\n// const axesHelper = new THREE.AxesHelper()\n// scene.add(axesHelper)\n\n/**\n * Camera\n */\n// Base camera\nconst camera = new THREE.PerspectiveCamera(\n  35,\n  sizes.width / sizes.height,\n  0.1,\n  120\n);\ncamera.position.set(-1.526809290138386, 2.933433136629435, 2.2502940751091676);\ncamera.rotation.set(\n  -0.9164283978958037,\n  -0.3916373693287119,\n  -0.46170863682209606\n);\n// camera.position.set\n// (4,\n//     6,\n//     4)\n// camera.rotation.set(-0.9164283978958037,-0.3916373693287119,-0.46170863682209606)\n// camera.lookAt(0,0,0)\nconst controls = new OrbitControls(camera, canvas);\n\nscene.add(camera);\n\n// for debugging purposes\nwindow.camera = camera;\n\n// x: -1.5268092901383867, y: 2.933433136629435, z: 2.2502940751091676\n// _x: -0.9164283978958037, _y: -0.3916373693287119, _z: -0.46170863682209606\n\n/** weave */\n\n/**\n * Parameterization\n */\n\n//a\nconst amplitude = 1.0;\n\nconst lineLength = 8;\nconst points = [];\nconst size = [];\nfor (let i = -lineLength; i < lineLength; i += 0.01) {\n  points.push(new THREE.Vector3(0, 0, i));\n}\nconst geometry = new MeshLineGeometry();\ngeometry.setPoints(points, (p) => Math.sin(p) / 5);\nconst material = new MeshLineMaterial({\n  side: THREE.DoubleSide,\n  color: new THREE.Color(0.8, 0.1, 0.3),\n});\n//https://stackoverflow.com/questions/59548828/how-to-give-vertex-shader-to-a-geometry-without-changing-the-material-in-threejs\nmaterial.onBeforeCompile = function (info) {\n  // console.log(info.fragmentShader)\n  info.vertexShader = modMeshLineVertexShader;\n  info.fragmentShader = modMeshLineFragmentShader;\n  info.uniforms.uTime = { value: 0.0 };\n  info.uniforms.offset = { value: 0.0 };\n  info.uniforms.speed = { value: 1.0 };\n\n  info.uniforms.amplitude = { value: 1.0 };\n  info.uniforms.b = { value: 0.8 };\n  info.uniforms.c = { value: 0.8 };\n  info.uniforms.d = { value: 0.8 };\n  info.uniforms.e = { value: 0.8 };\n  info.uniforms.f = { value: 0.8 }; //offset\n  // console.log(info.uniforms)\n  // change info.vertexShader, info.fragmentShader, and/or info.uniforms here\n  // console.log(info.vertexShader)\n};\n\nfor (let i = 0; i < 2 * Math.PI; i += (2 * Math.PI) / 40) {\n  const mesh = new THREE.Mesh(geometry, material);\n  mesh.rotation.y += Math.PI / 2;\n  mesh.rotation.z = i;\n  mesh.position.y += Math.random() * 0.1;\n  mesh.position.z += Math.random() * 0.1;\n  mesh.position.x += Math.random() * 0.1;\n  scene.add(mesh);\n}\n// const mesh = new THREE.Mesh(geometry,material)\n// scene.add(mesh)\n// mesh.rotation.y += Math.PI/2\n\n/**\n * Renderer\n */\nconst renderer = new THREE.WebGLRenderer({\n  canvas: canvas,\n});\nrenderer.setSize(sizes.width, sizes.height);\nrenderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n\n\n// sliders\n/*\nvar slider = document.getElementById(\"myRange\");\nvar output = document.getElementById(\"demo\");\noutput.innerHTML = slider.value; // Display the default slider value\n\n// Update the current slider value (each time you drag the slider handle)\nslider.oninput = function() {\n  output.innerHTML = this.value;\n} \n*/\n\n// var aSlider = document.getElementById(\"a\");\n// aSlider.oninput = function () {\n//   if (material.uniforms.amplitude) {\n//     material.uniforms.amplitude.value = this.value;\n//   }\n// };\n\n// var bSlider = document.getElementById(\"b\");\n// bSlider.oninput = function () {\n//   if (material.uniforms.b) {\n//     material.uniforms.b.value = this.value;\n//   }\n// };\n\n// var cSlider = document.getElementById(\"c\");\n// cSlider.oninput = function () {\n//   if (material.uniforms.c) {\n//     material.uniforms.c.value = this.value;\n//   }\n// };\n// var dSlider = document.getElementById(\"d\");\n// dSlider.oninput = function () {\n//   if (material.uniforms.d) {\n//     material.uniforms.d.value = this.value;\n//   }\n// };\n// var eSlider = document.getElementById(\"e\");\n// eSlider.oninput = function () {\n//   if (material.uniforms.e) {\n//     material.uniforms.e.value = this.value;\n//   }\n// };\n// var fSlider = document.getElementById(\"f\");\n// fSlider.oninput = function () {\n//   if (material.uniforms.f) {\n//     material.uniforms.f.value = this.value;\n//   }\n// };\n\n/**\n * Animate\n */\nconst clock = new THREE.Clock();\nconst tick = () => {\n  const e = clock.getElapsedTime() * 0.5;\n\n  if (material.uniforms.uTime) {\n    material.uniforms.uTime.value = e;\n  }\n\n  renderer.render(scene, camera);\n  window.requestAnimationFrame(tick);\n};\n\ntick();\n\n\n\n\n  }\n}\n\n\n</script>\n\n\n\n<template>\n  <canvas class=\"webgl\" />\n</template>\n\n<style>\n    canvas {\n        width: 100vw;\n        height: 100vh;\n        /* background-color: ; */\n        /* background-color: aqua; */\n        position:fixed;\n        outline: none;\n        z-index: -1;\n    }\n</style>",
      "start": 1712037250230,
      "end": 1712037250268,
      "sourcemaps": null
    },
    {
      "name": "vite-plugin-glsl",
      "start": 1712037250268,
      "end": 1712037250268,
      "order": "pre"
    },
    {
      "name": "vite-plugin-glsl",
      "start": 1712037250268,
      "end": 1712037250268,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1712037250268,
      "end": 1712037250268,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1712037250268,
      "end": 1712037250268,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1712037250268,
      "end": 1712037250268,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1712037250268,
      "end": 1712037250268,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1712037250268,
      "end": 1712037250268,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1712037250268,
      "end": 1712037250268,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1712037250268,
      "end": 1712037250268,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1712037250268,
      "end": 1712037250268,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1712037250268,
      "end": 1712037250268,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1712037250268,
      "end": 1712037250268,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1712037250268,
      "end": 1712037250268,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1712037250268,
      "end": 1712037250268,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "\nimport * as THREE from \"three\";\nimport { MeshLineGeometry, MeshLineMaterial, raycast } from \"meshline\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls.js\";\n// import * as dat from 'dat.gui'\nimport modMeshLineVertexShader from \"../assets/shaders/modMeshLine/vertex.glsl\";\nimport modMeshLineFragmentShader from \"../assets/shaders/modMeshLine/fragment.glsl\";\nimport { Font, SubtractiveBlending } from \"three\";\n\nconst _sfc_main = {\n  // unmount() {\n    // leo says destroy it here\n  // }\n  mounted() {\n    const sizes = {\n      width: window.innerWidth,\n      height: window.innerHeight,\n    };\n      /**\n     * Sizes\n     */\n  // Window resizing\n    window.addEventListener(\"resize\", () => {\n      // Update sizes\n      sizes.width = window.innerWidth;\n      sizes.height = window.innerHeight;\n\n      // Update camera\n      camera.aspect = sizes.width / sizes.height;\n      camera.updateProjectionMatrix();\n\n      // Update renderer\n      renderer.setSize(sizes.width, sizes.height);\n      renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n    });\n\n\n//Palette\nconst backgroundColor = new THREE.Color(\"beige\");\n// const backgroundColor = new THREE.Color(\"black\")\n// const backgroundColor = new THREE.Color(\"#D9B9AD\");\n\n/**\n * Base\n */\n\n// Canvas\nconst canvas = document.querySelector(\"canvas.webgl\");\n\n// Scene\nconst scene = new THREE.Scene();\nscene.background = backgroundColor;\n\n/**\n * AxesHelper\n */\n// const axesHelper = new THREE.AxesHelper()\n// scene.add(axesHelper)\n\n/**\n * Camera\n */\n// Base camera\nconst camera = new THREE.PerspectiveCamera(\n  35,\n  sizes.width / sizes.height,\n  0.1,\n  120\n);\ncamera.position.set(-1.526809290138386, 2.933433136629435, 2.2502940751091676);\ncamera.rotation.set(\n  -0.9164283978958037,\n  -0.3916373693287119,\n  -0.46170863682209606\n);\n// camera.position.set\n// (4,\n//     6,\n//     4)\n// camera.rotation.set(-0.9164283978958037,-0.3916373693287119,-0.46170863682209606)\n// camera.lookAt(0,0,0)\nconst controls = new OrbitControls(camera, canvas);\n\nscene.add(camera);\n\n// for debugging purposes\nwindow.camera = camera;\n\n// x: -1.5268092901383867, y: 2.933433136629435, z: 2.2502940751091676\n// _x: -0.9164283978958037, _y: -0.3916373693287119, _z: -0.46170863682209606\n\n/** weave */\n\n/**\n * Parameterization\n */\n\n//a\nconst amplitude = 1.0;\n\nconst lineLength = 8;\nconst points = [];\nconst size = [];\nfor (let i = -lineLength; i < lineLength; i += 0.01) {\n  points.push(new THREE.Vector3(0, 0, i));\n}\nconst geometry = new MeshLineGeometry();\ngeometry.setPoints(points, (p) => Math.sin(p) / 5);\nconst material = new MeshLineMaterial({\n  side: THREE.DoubleSide,\n  color: new THREE.Color(0.8, 0.1, 0.3),\n});\n//https://stackoverflow.com/questions/59548828/how-to-give-vertex-shader-to-a-geometry-without-changing-the-material-in-threejs\nmaterial.onBeforeCompile = function (info) {\n  // console.log(info.fragmentShader)\n  info.vertexShader = modMeshLineVertexShader;\n  info.fragmentShader = modMeshLineFragmentShader;\n  info.uniforms.uTime = { value: 0.0 };\n  info.uniforms.offset = { value: 0.0 };\n  info.uniforms.speed = { value: 1.0 };\n\n  info.uniforms.amplitude = { value: 1.0 };\n  info.uniforms.b = { value: 0.8 };\n  info.uniforms.c = { value: 0.8 };\n  info.uniforms.d = { value: 0.8 };\n  info.uniforms.e = { value: 0.8 };\n  info.uniforms.f = { value: 0.8 }; //offset\n  // console.log(info.uniforms)\n  // change info.vertexShader, info.fragmentShader, and/or info.uniforms here\n  // console.log(info.vertexShader)\n};\n\nfor (let i = 0; i < 2 * Math.PI; i += (2 * Math.PI) / 40) {\n  const mesh = new THREE.Mesh(geometry, material);\n  mesh.rotation.y += Math.PI / 2;\n  mesh.rotation.z = i;\n  mesh.position.y += Math.random() * 0.1;\n  mesh.position.z += Math.random() * 0.1;\n  mesh.position.x += Math.random() * 0.1;\n  scene.add(mesh);\n}\n// const mesh = new THREE.Mesh(geometry,material)\n// scene.add(mesh)\n// mesh.rotation.y += Math.PI/2\n\n/**\n * Renderer\n */\nconst renderer = new THREE.WebGLRenderer({\n  canvas: canvas,\n});\nrenderer.setSize(sizes.width, sizes.height);\nrenderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n\n\n// sliders\n/*\nvar slider = document.getElementById(\"myRange\");\nvar output = document.getElementById(\"demo\");\noutput.innerHTML = slider.value; // Display the default slider value\n\n// Update the current slider value (each time you drag the slider handle)\nslider.oninput = function() {\n  output.innerHTML = this.value;\n} \n*/\n\n// var aSlider = document.getElementById(\"a\");\n// aSlider.oninput = function () {\n//   if (material.uniforms.amplitude) {\n//     material.uniforms.amplitude.value = this.value;\n//   }\n// };\n\n// var bSlider = document.getElementById(\"b\");\n// bSlider.oninput = function () {\n//   if (material.uniforms.b) {\n//     material.uniforms.b.value = this.value;\n//   }\n// };\n\n// var cSlider = document.getElementById(\"c\");\n// cSlider.oninput = function () {\n//   if (material.uniforms.c) {\n//     material.uniforms.c.value = this.value;\n//   }\n// };\n// var dSlider = document.getElementById(\"d\");\n// dSlider.oninput = function () {\n//   if (material.uniforms.d) {\n//     material.uniforms.d.value = this.value;\n//   }\n// };\n// var eSlider = document.getElementById(\"e\");\n// eSlider.oninput = function () {\n//   if (material.uniforms.e) {\n//     material.uniforms.e.value = this.value;\n//   }\n// };\n// var fSlider = document.getElementById(\"f\");\n// fSlider.oninput = function () {\n//   if (material.uniforms.f) {\n//     material.uniforms.f.value = this.value;\n//   }\n// };\n\n/**\n * Animate\n */\nconst clock = new THREE.Clock();\nconst tick = () => {\n  const e = clock.getElapsedTime() * 0.5;\n\n  if (material.uniforms.uTime) {\n    material.uniforms.uTime.value = e;\n  }\n\n  renderer.render(scene, camera);\n  window.requestAnimationFrame(tick);\n};\n\ntick();\n\n\n\n\n  }\n}\n\n\n\nimport { mergeProps as _mergeProps } from \"vue\"\nimport { ssrRenderAttrs as _ssrRenderAttrs } from \"vue/server-renderer\"\n\nfunction _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {\n  _push(`<canvas${_ssrRenderAttrs(_mergeProps({ class: \"webgl\" }, _attrs))}></canvas>`)\n}\n\nimport \"/Users/vertex/code/samir-is-on-the-internet/components/twist.vue?vue&type=style&index=0&lang.css\"\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"components/twist.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nimport _export_sfc from '\u0000plugin-vue:export-helper'\nexport default /*#__PURE__*/_export_sfc(_sfc_main, [['ssrRender',_sfc_ssrRender]])",
      "start": 1712037250268,
      "end": 1712037250277,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "file": "/Users/vertex/code/samir-is-on-the-internet/components/twist.vue",
        "names": [],
        "sources": [
          "/Users/vertex/code/samir-is-on-the-internet/components/twist.vue"
        ],
        "sourcesContent": [
          "<script>\nimport * as THREE from \"three\";\nimport { MeshLineGeometry, MeshLineMaterial, raycast } from \"meshline\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls.js\";\n// import * as dat from 'dat.gui'\nimport modMeshLineVertexShader from \"../assets/shaders/modMeshLine/vertex.glsl\";\nimport modMeshLineFragmentShader from \"../assets/shaders/modMeshLine/fragment.glsl\";\nimport { Font, SubtractiveBlending } from \"three\";\n\nexport default {\n  // unmount() {\n    // leo says destroy it here\n  // }\n  mounted() {\n    const sizes = {\n      width: window.innerWidth,\n      height: window.innerHeight,\n    };\n      /**\n     * Sizes\n     */\n  // Window resizing\n    window.addEventListener(\"resize\", () => {\n      // Update sizes\n      sizes.width = window.innerWidth;\n      sizes.height = window.innerHeight;\n\n      // Update camera\n      camera.aspect = sizes.width / sizes.height;\n      camera.updateProjectionMatrix();\n\n      // Update renderer\n      renderer.setSize(sizes.width, sizes.height);\n      renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n    });\n\n\n//Palette\nconst backgroundColor = new THREE.Color(\"beige\");\n// const backgroundColor = new THREE.Color(\"black\")\n// const backgroundColor = new THREE.Color(\"#D9B9AD\");\n\n/**\n * Base\n */\n\n// Canvas\nconst canvas = document.querySelector(\"canvas.webgl\");\n\n// Scene\nconst scene = new THREE.Scene();\nscene.background = backgroundColor;\n\n/**\n * AxesHelper\n */\n// const axesHelper = new THREE.AxesHelper()\n// scene.add(axesHelper)\n\n/**\n * Camera\n */\n// Base camera\nconst camera = new THREE.PerspectiveCamera(\n  35,\n  sizes.width / sizes.height,\n  0.1,\n  120\n);\ncamera.position.set(-1.526809290138386, 2.933433136629435, 2.2502940751091676);\ncamera.rotation.set(\n  -0.9164283978958037,\n  -0.3916373693287119,\n  -0.46170863682209606\n);\n// camera.position.set\n// (4,\n//     6,\n//     4)\n// camera.rotation.set(-0.9164283978958037,-0.3916373693287119,-0.46170863682209606)\n// camera.lookAt(0,0,0)\nconst controls = new OrbitControls(camera, canvas);\n\nscene.add(camera);\n\n// for debugging purposes\nwindow.camera = camera;\n\n// x: -1.5268092901383867, y: 2.933433136629435, z: 2.2502940751091676\n// _x: -0.9164283978958037, _y: -0.3916373693287119, _z: -0.46170863682209606\n\n/** weave */\n\n/**\n * Parameterization\n */\n\n//a\nconst amplitude = 1.0;\n\nconst lineLength = 8;\nconst points = [];\nconst size = [];\nfor (let i = -lineLength; i < lineLength; i += 0.01) {\n  points.push(new THREE.Vector3(0, 0, i));\n}\nconst geometry = new MeshLineGeometry();\ngeometry.setPoints(points, (p) => Math.sin(p) / 5);\nconst material = new MeshLineMaterial({\n  side: THREE.DoubleSide,\n  color: new THREE.Color(0.8, 0.1, 0.3),\n});\n//https://stackoverflow.com/questions/59548828/how-to-give-vertex-shader-to-a-geometry-without-changing-the-material-in-threejs\nmaterial.onBeforeCompile = function (info) {\n  // console.log(info.fragmentShader)\n  info.vertexShader = modMeshLineVertexShader;\n  info.fragmentShader = modMeshLineFragmentShader;\n  info.uniforms.uTime = { value: 0.0 };\n  info.uniforms.offset = { value: 0.0 };\n  info.uniforms.speed = { value: 1.0 };\n\n  info.uniforms.amplitude = { value: 1.0 };\n  info.uniforms.b = { value: 0.8 };\n  info.uniforms.c = { value: 0.8 };\n  info.uniforms.d = { value: 0.8 };\n  info.uniforms.e = { value: 0.8 };\n  info.uniforms.f = { value: 0.8 }; //offset\n  // console.log(info.uniforms)\n  // change info.vertexShader, info.fragmentShader, and/or info.uniforms here\n  // console.log(info.vertexShader)\n};\n\nfor (let i = 0; i < 2 * Math.PI; i += (2 * Math.PI) / 40) {\n  const mesh = new THREE.Mesh(geometry, material);\n  mesh.rotation.y += Math.PI / 2;\n  mesh.rotation.z = i;\n  mesh.position.y += Math.random() * 0.1;\n  mesh.position.z += Math.random() * 0.1;\n  mesh.position.x += Math.random() * 0.1;\n  scene.add(mesh);\n}\n// const mesh = new THREE.Mesh(geometry,material)\n// scene.add(mesh)\n// mesh.rotation.y += Math.PI/2\n\n/**\n * Renderer\n */\nconst renderer = new THREE.WebGLRenderer({\n  canvas: canvas,\n});\nrenderer.setSize(sizes.width, sizes.height);\nrenderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n\n\n// sliders\n/*\nvar slider = document.getElementById(\"myRange\");\nvar output = document.getElementById(\"demo\");\noutput.innerHTML = slider.value; // Display the default slider value\n\n// Update the current slider value (each time you drag the slider handle)\nslider.oninput = function() {\n  output.innerHTML = this.value;\n} \n*/\n\n// var aSlider = document.getElementById(\"a\");\n// aSlider.oninput = function () {\n//   if (material.uniforms.amplitude) {\n//     material.uniforms.amplitude.value = this.value;\n//   }\n// };\n\n// var bSlider = document.getElementById(\"b\");\n// bSlider.oninput = function () {\n//   if (material.uniforms.b) {\n//     material.uniforms.b.value = this.value;\n//   }\n// };\n\n// var cSlider = document.getElementById(\"c\");\n// cSlider.oninput = function () {\n//   if (material.uniforms.c) {\n//     material.uniforms.c.value = this.value;\n//   }\n// };\n// var dSlider = document.getElementById(\"d\");\n// dSlider.oninput = function () {\n//   if (material.uniforms.d) {\n//     material.uniforms.d.value = this.value;\n//   }\n// };\n// var eSlider = document.getElementById(\"e\");\n// eSlider.oninput = function () {\n//   if (material.uniforms.e) {\n//     material.uniforms.e.value = this.value;\n//   }\n// };\n// var fSlider = document.getElementById(\"f\");\n// fSlider.oninput = function () {\n//   if (material.uniforms.f) {\n//     material.uniforms.f.value = this.value;\n//   }\n// };\n\n/**\n * Animate\n */\nconst clock = new THREE.Clock();\nconst tick = () => {\n  const e = clock.getElapsedTime() * 0.5;\n\n  if (material.uniforms.uTime) {\n    material.uniforms.uTime.value = e;\n  }\n\n  renderer.render(scene, camera);\n  window.requestAnimationFrame(tick);\n};\n\ntick();\n\n\n\n\n  }\n}\n\n\n</script>\n\n\n\n<template>\n  <canvas class=\"webgl\" />\n</template>\n\n<style>\n    canvas {\n        width: 100vw;\n        height: 100vh;\n        /* background-color: ; */\n        /* background-color: aqua; */\n        position:fixed;\n        outline: none;\n        z-index: -1;\n    }\n</style>"
        ],
        "mappings": ";AACA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5E,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChnF,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEjD,CAAC,CAAC,CAAC,CAAC,CA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AAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnF,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAElD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEjB,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEtB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAE5E,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;;AAEX,CAAC,CAAC;CACD,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;CACjB,CAAC;;AAEF,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;AAErB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AACf,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE;EACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACzC;AACA,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACpC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACtB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACvzC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;EACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;EACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;;EAEpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;EACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;EAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;EAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;EAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;EAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACzlC,CAAC;;AAED,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE;EACxD,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;EAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;EACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;EACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;EACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;EACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB;AACA,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAE9B,CAAC,CAAC;CACD,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;CACT,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;;AAG5D,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC;AACD,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;AAEnE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B;AACA,CAAC;;AAED,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;AACjC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;AACtC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC,IAAI;AACL,CAAC,EAAE,CAAC;;AAEJ,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;AACjC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;AAC9B,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,IAAI;AACL,CAAC,EAAE,CAAC;;AAEJ,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;AACjC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;AAC9B,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,IAAI;AACL,CAAC,EAAE,CAAC;AACJ,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;AACjC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;AAC9B,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,IAAI;AACL,CAAC,EAAE,CAAC;AACJ,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;AACjC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;AAC9B,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,IAAI;AACL,CAAC,EAAE,CAAC;AACJ,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;AACjC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;AAC9B,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,IAAI;AACL,CAAC,EAAE,CAAC;;AAEJ,CAAC,CAAC;CACD,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;CACR,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE;EACjB,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAEtC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;EACnC;;EAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC;;AAED,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;;;;EAKJ;AACF;;;;;;;;EAnOA,gBAAA,gBAAA,cA2OU,KAAK,EAAC,OAAO,IA3OvB"
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1712037250277,
      "end": 1712037250277,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712037250277,
      "end": 1712037250277,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712037250277,
      "end": 1712037250277,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1712037250277,
      "end": 1712037250277,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1712037250277,
      "end": 1712037250277,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1712037250277,
      "end": 1712037250277,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712037250277,
      "end": 1712037250277,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1712037250277,
      "end": 1712037250278,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import * as THREE from \"three\";\nimport { MeshLineGeometry, MeshLineMaterial, raycast } from \"meshline\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls.js\";\nimport modMeshLineVertexShader from \"../assets/shaders/modMeshLine/vertex.glsl\";\nimport modMeshLineFragmentShader from \"../assets/shaders/modMeshLine/fragment.glsl\";\nimport { Font, SubtractiveBlending } from \"three\";\nconst _sfc_main = {\n  // unmount() {\n  // leo says destroy it here\n  // }\n  mounted() {\n    const sizes = {\n      width: (void 0).innerWidth,\n      height: (void 0).innerHeight\n    };\n    (void 0).addEventListener(\"resize\", () => {\n      sizes.width = (void 0).innerWidth;\n      sizes.height = (void 0).innerHeight;\n      camera.aspect = sizes.width / sizes.height;\n      camera.updateProjectionMatrix();\n      renderer.setSize(sizes.width, sizes.height);\n      renderer.setPixelRatio(Math.min((void 0).devicePixelRatio, 2));\n    });\n    const backgroundColor = new THREE.Color(\"beige\");\n    const canvas = (void 0).querySelector(\"canvas.webgl\");\n    const scene = new THREE.Scene();\n    scene.background = backgroundColor;\n    const camera = new THREE.PerspectiveCamera(\n      35,\n      sizes.width / sizes.height,\n      0.1,\n      120\n    );\n    camera.position.set(-1.526809290138386, 2.933433136629435, 2.2502940751091676);\n    camera.rotation.set(\n      -0.9164283978958037,\n      -0.3916373693287119,\n      -0.46170863682209606\n    );\n    const controls = new OrbitControls(camera, canvas);\n    scene.add(camera);\n    (void 0).camera = camera;\n    const amplitude = 1;\n    const lineLength = 8;\n    const points = [];\n    const size = [];\n    for (let i = -lineLength; i < lineLength; i += 0.01) {\n      points.push(new THREE.Vector3(0, 0, i));\n    }\n    const geometry = new MeshLineGeometry();\n    geometry.setPoints(points, (p) => Math.sin(p) / 5);\n    const material = new MeshLineMaterial({\n      side: THREE.DoubleSide,\n      color: new THREE.Color(0.8, 0.1, 0.3)\n    });\n    material.onBeforeCompile = function(info) {\n      info.vertexShader = modMeshLineVertexShader;\n      info.fragmentShader = modMeshLineFragmentShader;\n      info.uniforms.uTime = { value: 0 };\n      info.uniforms.offset = { value: 0 };\n      info.uniforms.speed = { value: 1 };\n      info.uniforms.amplitude = { value: 1 };\n      info.uniforms.b = { value: 0.8 };\n      info.uniforms.c = { value: 0.8 };\n      info.uniforms.d = { value: 0.8 };\n      info.uniforms.e = { value: 0.8 };\n      info.uniforms.f = { value: 0.8 };\n    };\n    for (let i = 0; i < 2 * Math.PI; i += 2 * Math.PI / 40) {\n      const mesh = new THREE.Mesh(geometry, material);\n      mesh.rotation.y += Math.PI / 2;\n      mesh.rotation.z = i;\n      mesh.position.y += Math.random() * 0.1;\n      mesh.position.z += Math.random() * 0.1;\n      mesh.position.x += Math.random() * 0.1;\n      scene.add(mesh);\n    }\n    const renderer = new THREE.WebGLRenderer({\n      canvas\n    });\n    renderer.setSize(sizes.width, sizes.height);\n    renderer.setPixelRatio(Math.min((void 0).devicePixelRatio, 2));\n    const clock = new THREE.Clock();\n    const tick = () => {\n      const e = clock.getElapsedTime() * 0.5;\n      if (material.uniforms.uTime) {\n        material.uniforms.uTime.value = e;\n      }\n      renderer.render(scene, camera);\n      (void 0).requestAnimationFrame(tick);\n    };\n    tick();\n  }\n};\nimport { mergeProps as _mergeProps } from \"vue\";\nimport { ssrRenderAttrs as _ssrRenderAttrs } from \"vue/server-renderer\";\nfunction _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {\n  _push(`<canvas${_ssrRenderAttrs(_mergeProps({ class: \"webgl\" }, _attrs))}></canvas>`);\n}\nimport \"/Users/vertex/code/samir-is-on-the-internet/components/twist.vue?vue&type=style&index=0&lang.css\";\nimport { useSSRContext as __vite_useSSRContext } from \"vue\";\nconst _sfc_setup = _sfc_main.setup;\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext();\n  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add(\"components/twist.vue\");\n  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;\n};\nimport _export_sfc from \"\\0plugin-vue:export-helper\";\nexport default /* @__PURE__ */ _export_sfc(_sfc_main, [[\"ssrRender\", _sfc_ssrRender]]);\n",
      "start": 1712037250278,
      "end": 1712037250371,
      "order": "normal",
      "sourcemaps": "{\n  \"version\": 3,\n  \"sources\": [\"/Users/vertex/code/samir-is-on-the-internet/components/twist.vue\"],\n  \"sourcesContent\": [\"\\nimport * as THREE from \\\"three\\\";\\nimport { MeshLineGeometry, MeshLineMaterial, raycast } from \\\"meshline\\\";\\nimport { OrbitControls } from \\\"three/examples/jsm/controls/OrbitControls.js\\\";\\n// import * as dat from 'dat.gui'\\nimport modMeshLineVertexShader from \\\"../assets/shaders/modMeshLine/vertex.glsl\\\";\\nimport modMeshLineFragmentShader from \\\"../assets/shaders/modMeshLine/fragment.glsl\\\";\\nimport { Font, SubtractiveBlending } from \\\"three\\\";\\n\\nconst _sfc_main = {\\n  // unmount() {\\n    // leo says destroy it here\\n  // }\\n  mounted() {\\n    const sizes = {\\n      width: window.innerWidth,\\n      height: window.innerHeight,\\n    };\\n      /**\\n     * Sizes\\n     */\\n  // Window resizing\\n    window.addEventListener(\\\"resize\\\", () => {\\n      // Update sizes\\n      sizes.width = window.innerWidth;\\n      sizes.height = window.innerHeight;\\n\\n      // Update camera\\n      camera.aspect = sizes.width / sizes.height;\\n      camera.updateProjectionMatrix();\\n\\n      // Update renderer\\n      renderer.setSize(sizes.width, sizes.height);\\n      renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\\n    });\\n\\n\\n//Palette\\nconst backgroundColor = new THREE.Color(\\\"beige\\\");\\n// const backgroundColor = new THREE.Color(\\\"black\\\")\\n// const backgroundColor = new THREE.Color(\\\"#D9B9AD\\\");\\n\\n/**\\n * Base\\n */\\n\\n// Canvas\\nconst canvas = document.querySelector(\\\"canvas.webgl\\\");\\n\\n// Scene\\nconst scene = new THREE.Scene();\\nscene.background = backgroundColor;\\n\\n/**\\n * AxesHelper\\n */\\n// const axesHelper = new THREE.AxesHelper()\\n// scene.add(axesHelper)\\n\\n/**\\n * Camera\\n */\\n// Base camera\\nconst camera = new THREE.PerspectiveCamera(\\n  35,\\n  sizes.width / sizes.height,\\n  0.1,\\n  120\\n);\\ncamera.position.set(-1.526809290138386, 2.933433136629435, 2.2502940751091676);\\ncamera.rotation.set(\\n  -0.9164283978958037,\\n  -0.3916373693287119,\\n  -0.46170863682209606\\n);\\n// camera.position.set\\n// (4,\\n//     6,\\n//     4)\\n// camera.rotation.set(-0.9164283978958037,-0.3916373693287119,-0.46170863682209606)\\n// camera.lookAt(0,0,0)\\nconst controls = new OrbitControls(camera, canvas);\\n\\nscene.add(camera);\\n\\n// for debugging purposes\\nwindow.camera = camera;\\n\\n// x: -1.5268092901383867, y: 2.933433136629435, z: 2.2502940751091676\\n// _x: -0.9164283978958037, _y: -0.3916373693287119, _z: -0.46170863682209606\\n\\n/** weave */\\n\\n/**\\n * Parameterization\\n */\\n\\n//a\\nconst amplitude = 1.0;\\n\\nconst lineLength = 8;\\nconst points = [];\\nconst size = [];\\nfor (let i = -lineLength; i < lineLength; i += 0.01) {\\n  points.push(new THREE.Vector3(0, 0, i));\\n}\\nconst geometry = new MeshLineGeometry();\\ngeometry.setPoints(points, (p) => Math.sin(p) / 5);\\nconst material = new MeshLineMaterial({\\n  side: THREE.DoubleSide,\\n  color: new THREE.Color(0.8, 0.1, 0.3),\\n});\\n//https://stackoverflow.com/questions/59548828/how-to-give-vertex-shader-to-a-geometry-without-changing-the-material-in-threejs\\nmaterial.onBeforeCompile = function (info) {\\n  // console.log(info.fragmentShader)\\n  info.vertexShader = modMeshLineVertexShader;\\n  info.fragmentShader = modMeshLineFragmentShader;\\n  info.uniforms.uTime = { value: 0.0 };\\n  info.uniforms.offset = { value: 0.0 };\\n  info.uniforms.speed = { value: 1.0 };\\n\\n  info.uniforms.amplitude = { value: 1.0 };\\n  info.uniforms.b = { value: 0.8 };\\n  info.uniforms.c = { value: 0.8 };\\n  info.uniforms.d = { value: 0.8 };\\n  info.uniforms.e = { value: 0.8 };\\n  info.uniforms.f = { value: 0.8 }; //offset\\n  // console.log(info.uniforms)\\n  // change info.vertexShader, info.fragmentShader, and/or info.uniforms here\\n  // console.log(info.vertexShader)\\n};\\n\\nfor (let i = 0; i < 2 * Math.PI; i += (2 * Math.PI) / 40) {\\n  const mesh = new THREE.Mesh(geometry, material);\\n  mesh.rotation.y += Math.PI / 2;\\n  mesh.rotation.z = i;\\n  mesh.position.y += Math.random() * 0.1;\\n  mesh.position.z += Math.random() * 0.1;\\n  mesh.position.x += Math.random() * 0.1;\\n  scene.add(mesh);\\n}\\n// const mesh = new THREE.Mesh(geometry,material)\\n// scene.add(mesh)\\n// mesh.rotation.y += Math.PI/2\\n\\n/**\\n * Renderer\\n */\\nconst renderer = new THREE.WebGLRenderer({\\n  canvas: canvas,\\n});\\nrenderer.setSize(sizes.width, sizes.height);\\nrenderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\\n\\n\\n// sliders\\n/*\\nvar slider = document.getElementById(\\\"myRange\\\");\\nvar output = document.getElementById(\\\"demo\\\");\\noutput.innerHTML = slider.value; // Display the default slider value\\n\\n// Update the current slider value (each time you drag the slider handle)\\nslider.oninput = function() {\\n  output.innerHTML = this.value;\\n} \\n*/\\n\\n// var aSlider = document.getElementById(\\\"a\\\");\\n// aSlider.oninput = function () {\\n//   if (material.uniforms.amplitude) {\\n//     material.uniforms.amplitude.value = this.value;\\n//   }\\n// };\\n\\n// var bSlider = document.getElementById(\\\"b\\\");\\n// bSlider.oninput = function () {\\n//   if (material.uniforms.b) {\\n//     material.uniforms.b.value = this.value;\\n//   }\\n// };\\n\\n// var cSlider = document.getElementById(\\\"c\\\");\\n// cSlider.oninput = function () {\\n//   if (material.uniforms.c) {\\n//     material.uniforms.c.value = this.value;\\n//   }\\n// };\\n// var dSlider = document.getElementById(\\\"d\\\");\\n// dSlider.oninput = function () {\\n//   if (material.uniforms.d) {\\n//     material.uniforms.d.value = this.value;\\n//   }\\n// };\\n// var eSlider = document.getElementById(\\\"e\\\");\\n// eSlider.oninput = function () {\\n//   if (material.uniforms.e) {\\n//     material.uniforms.e.value = this.value;\\n//   }\\n// };\\n// var fSlider = document.getElementById(\\\"f\\\");\\n// fSlider.oninput = function () {\\n//   if (material.uniforms.f) {\\n//     material.uniforms.f.value = this.value;\\n//   }\\n// };\\n\\n/**\\n * Animate\\n */\\nconst clock = new THREE.Clock();\\nconst tick = () => {\\n  const e = clock.getElapsedTime() * 0.5;\\n\\n  if (material.uniforms.uTime) {\\n    material.uniforms.uTime.value = e;\\n  }\\n\\n  renderer.render(scene, camera);\\n  window.requestAnimationFrame(tick);\\n};\\n\\ntick();\\n\\n\\n\\n\\n  }\\n}\\n\\n\\n\\nimport { mergeProps as _mergeProps } from \\\"vue\\\"\\nimport { ssrRenderAttrs as _ssrRenderAttrs } from \\\"vue/server-renderer\\\"\\n\\nfunction _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {\\n  _push(`<canvas${_ssrRenderAttrs(_mergeProps({ class: \\\"webgl\\\" }, _attrs))}></canvas>`)\\n}\\n\\nimport \\\"/Users/vertex/code/samir-is-on-the-internet/components/twist.vue?vue&type=style&index=0&lang.css\\\"\\n\\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\\nconst _sfc_setup = _sfc_main.setup\\n_sfc_main.setup = (props, ctx) => {\\n  const ssrContext = __vite_useSSRContext()\\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\\\"components/twist.vue\\\")\\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\\n}\\nimport _export_sfc from '\\u0000plugin-vue:export-helper'\\nexport default /*#__PURE__*/_export_sfc(_sfc_main, [['ssrRender',_sfc_ssrRender]])\"],\n  \"mappings\": \"AACA,YAAY,WAAW;AACvB,SAAS,kBAAkB,kBAAkB,eAAe;AAC5D,SAAS,qBAAqB;AAE9B,OAAO,6BAA6B;AACpC,OAAO,+BAA+B;AACtC,SAAS,MAAM,2BAA2B;AAE1C,MAAM,YAAY;AAAA;AAAA;AAAA;AAAA,EAIhB,UAAU;AACR,UAAM,QAAQ;AAAA,MACZ,OAAO,SAAO;AAAA,MACd,QAAQ,SAAO;AAAA,IACjB;AAKA,aAAO,iBAAiB,UAAU,MAAM;AAEtC,YAAM,QAAQ,SAAO;AACrB,YAAM,SAAS,SAAO;AAGtB,aAAO,SAAS,MAAM,QAAQ,MAAM;AACpC,aAAO,uBAAuB;AAG9B,eAAS,QAAQ,MAAM,OAAO,MAAM,MAAM;AAC1C,eAAS,cAAc,KAAK,IAAI,SAAO,kBAAkB,CAAC,CAAC;AAAA,IAC7D,CAAC;AAIL,UAAM,kBAAkB,IAAI,MAAM,MAAM,OAAO;AAS/C,UAAM,SAAS,SAAS,cAAc,cAAc;AAGpD,UAAM,QAAQ,IAAI,MAAM,MAAM;AAC9B,UAAM,aAAa;AAYnB,UAAM,SAAS,IAAI,MAAM;AAAA,MACvB;AAAA,MACA,MAAM,QAAQ,MAAM;AAAA,MACpB;AAAA,MACA;AAAA,IACF;AACA,WAAO,SAAS,IAAI,oBAAoB,mBAAmB,kBAAkB;AAC7E,WAAO,SAAS;AAAA,MACd;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAOA,UAAM,WAAW,IAAI,cAAc,QAAQ,MAAM;AAEjD,UAAM,IAAI,MAAM;AAGhB,aAAO,SAAS;AAYhB,UAAM,YAAY;AAElB,UAAM,aAAa;AACnB,UAAM,SAAS,CAAC;AAChB,UAAM,OAAO,CAAC;AACd,aAAS,IAAI,CAAC,YAAY,IAAI,YAAY,KAAK,MAAM;AACnD,aAAO,KAAK,IAAI,MAAM,QAAQ,GAAG,GAAG,CAAC,CAAC;AAAA,IACxC;AACA,UAAM,WAAW,IAAI,iBAAiB;AACtC,aAAS,UAAU,QAAQ,CAAC,MAAM,KAAK,IAAI,CAAC,IAAI,CAAC;AACjD,UAAM,WAAW,IAAI,iBAAiB;AAAA,MACpC,MAAM,MAAM;AAAA,MACZ,OAAO,IAAI,MAAM,MAAM,KAAK,KAAK,GAAG;AAAA,IACtC,CAAC;AAED,aAAS,kBAAkB,SAAU,MAAM;AAEzC,WAAK,eAAe;AACpB,WAAK,iBAAiB;AACtB,WAAK,SAAS,QAAQ,EAAE,OAAO,EAAI;AACnC,WAAK,SAAS,SAAS,EAAE,OAAO,EAAI;AACpC,WAAK,SAAS,QAAQ,EAAE,OAAO,EAAI;AAEnC,WAAK,SAAS,YAAY,EAAE,OAAO,EAAI;AACvC,WAAK,SAAS,IAAI,EAAE,OAAO,IAAI;AAC/B,WAAK,SAAS,IAAI,EAAE,OAAO,IAAI;AAC/B,WAAK,SAAS,IAAI,EAAE,OAAO,IAAI;AAC/B,WAAK,SAAS,IAAI,EAAE,OAAO,IAAI;AAC/B,WAAK,SAAS,IAAI,EAAE,OAAO,IAAI;AAAA,IAIjC;AAEA,aAAS,IAAI,GAAG,IAAI,IAAI,KAAK,IAAI,KAAM,IAAI,KAAK,KAAM,IAAI;AACxD,YAAM,OAAO,IAAI,MAAM,KAAK,UAAU,QAAQ;AAC9C,WAAK,SAAS,KAAK,KAAK,KAAK;AAC7B,WAAK,SAAS,IAAI;AAClB,WAAK,SAAS,KAAK,KAAK,OAAO,IAAI;AACnC,WAAK,SAAS,KAAK,KAAK,OAAO,IAAI;AACnC,WAAK,SAAS,KAAK,KAAK,OAAO,IAAI;AACnC,YAAM,IAAI,IAAI;AAAA,IAChB;AAQA,UAAM,WAAW,IAAI,MAAM,cAAc;AAAA,MACvC;AAAA,IACF,CAAC;AACD,aAAS,QAAQ,MAAM,OAAO,MAAM,MAAM;AAC1C,aAAS,cAAc,KAAK,IAAI,SAAO,kBAAkB,CAAC,CAAC;AAyD3D,UAAM,QAAQ,IAAI,MAAM,MAAM;AAC9B,UAAM,OAAO,MAAM;AACjB,YAAM,IAAI,MAAM,eAAe,IAAI;AAEnC,UAAI,SAAS,SAAS,OAAO;AAC3B,iBAAS,SAAS,MAAM,QAAQ;AAAA,MAClC;AAEA,eAAS,OAAO,OAAO,MAAM;AAC7B,eAAO,sBAAsB,IAAI;AAAA,IACnC;AAEA,SAAK;AAAA,EAKH;AACF;AAIA,SAAS,cAAc,mBAAmB;AAC1C,SAAS,kBAAkB,uBAAuB;AAElD,SAAS,eAAe,MAAM,OAAO,SAAS,QAAQ,QAAQ,QAAQ,OAAO,UAAU;AACrF,QAAM,UAAU,gBAAgB,YAAY,EAAE,OAAO,QAAQ,GAAG,MAAM,CAAC,CAAC,YAAY;AACtF;AAEA,OAAO;AAEP,SAAS,iBAAiB,4BAA4B;AACtD,MAAM,aAAa,UAAU;AAC7B,UAAU,QAAQ,CAAC,OAAO,QAAQ;AAChC,QAAM,aAAa,qBAAqB;AACvC,GAAC,WAAW,YAAY,WAAW,UAAU,oBAAI,IAAI,IAAI,IAAI,sBAAsB;AACpF,SAAO,aAAa,WAAW,OAAO,GAAG,IAAI;AAC/C;AACA,OAAO,iBAAiB;AACxB,eAA4B,4BAAY,WAAW,CAAC,CAAC,aAAY,cAAc,CAAC,CAAC;\",\n  \"names\": []\n}\n"
    },
    {
      "name": "vite:css-post",
      "start": 1712037250371,
      "end": 1712037250371,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1712037250371,
      "end": 1712037250371,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1712037250371,
      "end": 1712037250371,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1712037250371,
      "end": 1712037250371,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1712037250371,
      "end": 1712037250371,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1712037250371,
      "end": 1712037250371,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1712037250371,
      "end": 1712037250371,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1712037250371,
      "end": 1712037250371,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1712037250371,
      "end": 1712037250371,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1712037250371,
      "end": 1712037250372,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1712037250371,
      "end": 1712037250372,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1712037250372,
      "end": 1712037250372,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1712037250372,
      "end": 1712037250372,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1712037250372,
      "end": 1712037250372,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1712037250372,
      "end": 1712037250372,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1712037250372,
      "end": 1712037250372,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1712037250372,
      "end": 1712037250372,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1712037250372,
      "end": 1712037250372,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1712037250372,
      "end": 1712037250372,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1712037250372,
      "end": 1712037250372,
      "order": "normal"
    }
  ]
}
