{
  "resolvedId": "/Users/vertex/code/samir-is-on-the-internet/components/twist.vue?vue&type=style&index=0&lang.css",
  "transforms": [
    {
      "name": "vite:vue",
      "result": "\n    canvas {\n        width: 100vw;\n        height: 100vh;\n        /* background-color: ; */\n        /* background-color: aqua; */\n        position:fixed;\n        outline: none;\n        z-index: -1;\n    }\n",
      "start": 1712037250376,
      "end": 1712037250376,
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/vertex/code/samir-is-on-the-internet/components/twist.vue"
        ],
        "names": [],
        "mappings": ";IA+OI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QACH,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACb,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;QACxB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IACf",
        "file": "/Users/vertex/code/samir-is-on-the-internet/components/twist.vue",
        "sourceRoot": "",
        "sourcesContent": [
          "<script>\nimport * as THREE from \"three\";\nimport { MeshLineGeometry, MeshLineMaterial, raycast } from \"meshline\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls.js\";\n// import * as dat from 'dat.gui'\nimport modMeshLineVertexShader from \"../assets/shaders/modMeshLine/vertex.glsl\";\nimport modMeshLineFragmentShader from \"../assets/shaders/modMeshLine/fragment.glsl\";\nimport { Font, SubtractiveBlending } from \"three\";\n\nexport default {\n  // unmount() {\n    // leo says destroy it here\n  // }\n  mounted() {\n    const sizes = {\n      width: window.innerWidth,\n      height: window.innerHeight,\n    };\n      /**\n     * Sizes\n     */\n  // Window resizing\n    window.addEventListener(\"resize\", () => {\n      // Update sizes\n      sizes.width = window.innerWidth;\n      sizes.height = window.innerHeight;\n\n      // Update camera\n      camera.aspect = sizes.width / sizes.height;\n      camera.updateProjectionMatrix();\n\n      // Update renderer\n      renderer.setSize(sizes.width, sizes.height);\n      renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n    });\n\n\n//Palette\nconst backgroundColor = new THREE.Color(\"beige\");\n// const backgroundColor = new THREE.Color(\"black\")\n// const backgroundColor = new THREE.Color(\"#D9B9AD\");\n\n/**\n * Base\n */\n\n// Canvas\nconst canvas = document.querySelector(\"canvas.webgl\");\n\n// Scene\nconst scene = new THREE.Scene();\nscene.background = backgroundColor;\n\n/**\n * AxesHelper\n */\n// const axesHelper = new THREE.AxesHelper()\n// scene.add(axesHelper)\n\n/**\n * Camera\n */\n// Base camera\nconst camera = new THREE.PerspectiveCamera(\n  35,\n  sizes.width / sizes.height,\n  0.1,\n  120\n);\ncamera.position.set(-1.526809290138386, 2.933433136629435, 2.2502940751091676);\ncamera.rotation.set(\n  -0.9164283978958037,\n  -0.3916373693287119,\n  -0.46170863682209606\n);\n// camera.position.set\n// (4,\n//     6,\n//     4)\n// camera.rotation.set(-0.9164283978958037,-0.3916373693287119,-0.46170863682209606)\n// camera.lookAt(0,0,0)\nconst controls = new OrbitControls(camera, canvas);\n\nscene.add(camera);\n\n// for debugging purposes\nwindow.camera = camera;\n\n// x: -1.5268092901383867, y: 2.933433136629435, z: 2.2502940751091676\n// _x: -0.9164283978958037, _y: -0.3916373693287119, _z: -0.46170863682209606\n\n/** weave */\n\n/**\n * Parameterization\n */\n\n//a\nconst amplitude = 1.0;\n\nconst lineLength = 8;\nconst points = [];\nconst size = [];\nfor (let i = -lineLength; i < lineLength; i += 0.01) {\n  points.push(new THREE.Vector3(0, 0, i));\n}\nconst geometry = new MeshLineGeometry();\ngeometry.setPoints(points, (p) => Math.sin(p) / 5);\nconst material = new MeshLineMaterial({\n  side: THREE.DoubleSide,\n  color: new THREE.Color(0.8, 0.1, 0.3),\n});\n//https://stackoverflow.com/questions/59548828/how-to-give-vertex-shader-to-a-geometry-without-changing-the-material-in-threejs\nmaterial.onBeforeCompile = function (info) {\n  // console.log(info.fragmentShader)\n  info.vertexShader = modMeshLineVertexShader;\n  info.fragmentShader = modMeshLineFragmentShader;\n  info.uniforms.uTime = { value: 0.0 };\n  info.uniforms.offset = { value: 0.0 };\n  info.uniforms.speed = { value: 1.0 };\n\n  info.uniforms.amplitude = { value: 1.0 };\n  info.uniforms.b = { value: 0.8 };\n  info.uniforms.c = { value: 0.8 };\n  info.uniforms.d = { value: 0.8 };\n  info.uniforms.e = { value: 0.8 };\n  info.uniforms.f = { value: 0.8 }; //offset\n  // console.log(info.uniforms)\n  // change info.vertexShader, info.fragmentShader, and/or info.uniforms here\n  // console.log(info.vertexShader)\n};\n\nfor (let i = 0; i < 2 * Math.PI; i += (2 * Math.PI) / 40) {\n  const mesh = new THREE.Mesh(geometry, material);\n  mesh.rotation.y += Math.PI / 2;\n  mesh.rotation.z = i;\n  mesh.position.y += Math.random() * 0.1;\n  mesh.position.z += Math.random() * 0.1;\n  mesh.position.x += Math.random() * 0.1;\n  scene.add(mesh);\n}\n// const mesh = new THREE.Mesh(geometry,material)\n// scene.add(mesh)\n// mesh.rotation.y += Math.PI/2\n\n/**\n * Renderer\n */\nconst renderer = new THREE.WebGLRenderer({\n  canvas: canvas,\n});\nrenderer.setSize(sizes.width, sizes.height);\nrenderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n\n\n// sliders\n/*\nvar slider = document.getElementById(\"myRange\");\nvar output = document.getElementById(\"demo\");\noutput.innerHTML = slider.value; // Display the default slider value\n\n// Update the current slider value (each time you drag the slider handle)\nslider.oninput = function() {\n  output.innerHTML = this.value;\n} \n*/\n\n// var aSlider = document.getElementById(\"a\");\n// aSlider.oninput = function () {\n//   if (material.uniforms.amplitude) {\n//     material.uniforms.amplitude.value = this.value;\n//   }\n// };\n\n// var bSlider = document.getElementById(\"b\");\n// bSlider.oninput = function () {\n//   if (material.uniforms.b) {\n//     material.uniforms.b.value = this.value;\n//   }\n// };\n\n// var cSlider = document.getElementById(\"c\");\n// cSlider.oninput = function () {\n//   if (material.uniforms.c) {\n//     material.uniforms.c.value = this.value;\n//   }\n// };\n// var dSlider = document.getElementById(\"d\");\n// dSlider.oninput = function () {\n//   if (material.uniforms.d) {\n//     material.uniforms.d.value = this.value;\n//   }\n// };\n// var eSlider = document.getElementById(\"e\");\n// eSlider.oninput = function () {\n//   if (material.uniforms.e) {\n//     material.uniforms.e.value = this.value;\n//   }\n// };\n// var fSlider = document.getElementById(\"f\");\n// fSlider.oninput = function () {\n//   if (material.uniforms.f) {\n//     material.uniforms.f.value = this.value;\n//   }\n// };\n\n/**\n * Animate\n */\nconst clock = new THREE.Clock();\nconst tick = () => {\n  const e = clock.getElapsedTime() * 0.5;\n\n  if (material.uniforms.uTime) {\n    material.uniforms.uTime.value = e;\n  }\n\n  renderer.render(scene, camera);\n  window.requestAnimationFrame(tick);\n};\n\ntick();\n\n\n\n\n  }\n}\n\n\n</script>\n\n\n\n<template>\n  <canvas class=\"webgl\" />\n</template>\n\n<style>\n    canvas {\n        width: 100vw;\n        height: 100vh;\n        /* background-color: ; */\n        /* background-color: aqua; */\n        position:fixed;\n        outline: none;\n        z-index: -1;\n    }\n</style>"
        ]
      }
    },
    {
      "name": "vite-plugin-glsl",
      "start": 1712037250376,
      "end": 1712037250376,
      "order": "pre"
    },
    {
      "name": "vite-plugin-glsl",
      "start": 1712037250376,
      "end": 1712037250376,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1712037250376,
      "end": 1712037250376,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1712037250376,
      "end": 1712037250376,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1712037250376,
      "end": 1712037250376,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1712037250376,
      "end": 1712037250376,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1712037250376,
      "end": 1712037250376,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1712037250376,
      "end": 1712037250376,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1712037250376,
      "end": 1712037250376,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1712037250376,
      "end": 1712037250376,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "result": "canvas{height:100vh;outline:none;position:fixed;width:100vw;z-index:-1}",
      "start": 1712037250376,
      "end": 1712037250377,
      "order": "normal",
      "sourcemaps": {
        "file": "/Users/vertex/code/samir-is-on-the-internet/components/twist.vue",
        "mappings": "AACI,OAEI,YAAa,CAIb,YAAa,CADb,cAAc,CAJd,WAAY,CAMZ,UACJ",
        "names": [],
        "sources": [
          "/Users/vertex/code/samir-is-on-the-internet/components/twist.vue"
        ],
        "sourcesContent": [
          "\n    canvas {\n        width: 100vw;\n        height: 100vh;\n        /* background-color: ; */\n        /* background-color: aqua; */\n        position:fixed;\n        outline: none;\n        z-index: -1;\n    }\n"
        ],
        "version": 3
      }
    },
    {
      "name": "vite:esbuild",
      "start": 1712037250377,
      "end": 1712037250377,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1712037250377,
      "end": 1712037250377,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1712037250377,
      "end": 1712037250377,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "canvas{height:100vh;outline:none;position:fixed;width:100vw;z-index:-1}",
      "start": 1712037250377,
      "end": 1712037250377,
      "order": "normal",
      "sourcemaps": {
        "file": "/Users/vertex/code/samir-is-on-the-internet/components/twist.vue",
        "mappings": "AAAA,OAAO,YAAY,CAAC,YAAY,CAAC,cAAc,CAAC,WAAW,CAAC,UAAU",
        "names": [],
        "sources": [
          "/Users/vertex/code/samir-is-on-the-internet/components/twist.vue"
        ],
        "sourcesContent": [
          null
        ],
        "version": 3
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1712037250377,
      "end": 1712037250377,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712037250377,
      "end": 1712037250377,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712037250377,
      "end": 1712037250377,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1712037250377,
      "end": 1712037250377,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1712037250377,
      "end": 1712037250377,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1712037250377,
      "end": 1712037250377,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712037250377,
      "end": 1712037250377,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1712037250377,
      "end": 1712037250377,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1712037250377,
      "end": 1712037250377,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "result": "",
      "start": 1712037250377,
      "end": 1712037250377,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:build-html",
      "start": 1712037250377,
      "end": 1712037250377,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1712037250377,
      "end": 1712037250377,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1712037250377,
      "end": 1712037250377,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1712037250377,
      "end": 1712037250377,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1712037250377,
      "end": 1712037250377,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1712037250377,
      "end": 1712037250377,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1712037250377,
      "end": 1712037250377,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1712037250377,
      "end": 1712037250377,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1712037250377,
      "end": 1712037250377,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1712037250377,
      "end": 1712037250377,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1712037250377,
      "end": 1712037250377,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1712037250377,
      "end": 1712037250377,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1712037250377,
      "end": 1712037250377,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1712037250377,
      "end": 1712037250377,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1712037250377,
      "end": 1712037250377,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1712037250377,
      "end": 1712037250377,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1712037250377,
      "end": 1712037250377,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1712037250377,
      "end": 1712037250377,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1712037250377,
      "end": 1712037250377,
      "order": "normal"
    }
  ]
}
