{"version":3,"file":"ContentNavigation-4vUeaoB6.js","sources":["../../../../node_modules/@nuxt/content/dist/runtime/legacy/composables/navigation.js","../../../../node_modules/nuxt/dist/app/composables/state.js","../../../../node_modules/@nuxt/content/dist/runtime/components/ContentNavigation.vue"],"sourcesContent":["import { hash } from \"ohash\";\nimport { encodeQueryParams } from \"../../utils/query.js\";\nimport { jsonStringify } from \"../../utils/json.js\";\nimport { addPrerenderPath, shouldUseClientDB, withContentBase } from \"../../composables/utils.js\";\nimport { useContentPreview } from \"../../composables/preview.js\";\nimport { queryContent } from \"./query.js\";\nimport { useRuntimeConfig } from \"#imports\";\nexport const fetchContentNavigation = async (queryBuilder) => {\n  const { content } = useRuntimeConfig().public;\n  if (typeof queryBuilder?.params !== \"function\") {\n    queryBuilder = queryContent(queryBuilder);\n  }\n  const params = queryBuilder.params();\n  const apiPath = content.experimental.stripQueryParameters ? withContentBase(`/navigation/${process.dev ? \"_\" : `${hash(params)}.${content.integrity}`}/${encodeQueryParams(params)}.json`) : withContentBase(process.dev ? `/navigation/${hash(params)}` : `/navigation/${hash(params)}.${content.integrity}.json`);\n  if (!process.dev && process.server) {\n    addPrerenderPath(apiPath);\n  }\n  if (shouldUseClientDB()) {\n    const generateNavigation = await import(\"./client-db.js\").then((m) => m.generateNavigation);\n    return generateNavigation(params);\n  }\n  const data = await $fetch(apiPath, {\n    method: \"GET\",\n    responseType: \"json\",\n    params: content.experimental.stripQueryParameters ? void 0 : {\n      _params: jsonStringify(params),\n      previewToken: useContentPreview().getPreviewToken()\n    }\n  });\n  if (typeof data === \"string\" && data.startsWith(\"<!DOCTYPE html>\")) {\n    throw new Error(\"Not found\");\n  }\n  return data;\n};\n","import { isRef, toRef } from \"vue\";\nimport { useNuxtApp } from \"../nuxt.js\";\nimport { toArray } from \"../utils.js\";\nconst useStateKeyPrefix = \"$s\";\nexport function useState(...args) {\n  const autoKey = typeof args[args.length - 1] === \"string\" ? args.pop() : void 0;\n  if (typeof args[0] !== \"string\") {\n    args.unshift(autoKey);\n  }\n  const [_key, init] = args;\n  if (!_key || typeof _key !== \"string\") {\n    throw new TypeError(\"[nuxt] [useState] key must be a string: \" + _key);\n  }\n  if (init !== void 0 && typeof init !== \"function\") {\n    throw new Error(\"[nuxt] [useState] init must be a function: \" + init);\n  }\n  const key = useStateKeyPrefix + _key;\n  const nuxtApp = useNuxtApp();\n  const state = toRef(nuxtApp.payload.state, key);\n  if (state.value === void 0 && init) {\n    const initialValue = init();\n    if (isRef(initialValue)) {\n      nuxtApp.payload.state[key] = initialValue;\n      return initialValue;\n    }\n    state.value = initialValue;\n  }\n  return state;\n}\nexport function clearNuxtState(keys) {\n  const nuxtApp = useNuxtApp();\n  const _allKeys = Object.keys(nuxtApp.payload.state).map((key) => key.substring(useStateKeyPrefix.length));\n  const _keys = !keys ? _allKeys : typeof keys === \"function\" ? _allKeys.filter(keys) : toArray(keys);\n  for (const _key of _keys) {\n    const key = useStateKeyPrefix + _key;\n    if (key in nuxtApp.payload.state) {\n      nuxtApp.payload.state[key] = void 0;\n    }\n  }\n}\n","<script>\nimport { toRefs, defineComponent, h, useSlots, computed } from \"vue\";\nimport { hash } from \"ohash\";\nimport { useAsyncData, fetchContentNavigation, useState, useContent } from \"#imports\";\nimport { NuxtLink } from \"#components\";\nconst ContentNavigation = defineComponent({\n  name: \"ContentNavigation\",\n  props: {\n    /**\n     * A query to be passed to `fetchContentNavigation()`.\n     */\n    query: {\n      type: Object,\n      required: false,\n      default: void 0\n    }\n  },\n  async setup(props) {\n    const {\n      query\n    } = toRefs(props);\n    const queryBuilder = computed(() => {\n      if (typeof query.value?.params === \"function\") {\n        return query.value.params();\n      }\n      return query.value;\n    });\n    if (!queryBuilder.value && useState(\"dd-navigation\").value) {\n      const { navigation: navigation2 } = useContent();\n      return { navigation: navigation2 };\n    }\n    const { data: navigation } = await useAsyncData(\n      `content-navigation-${hash(queryBuilder.value)}`,\n      () => fetchContentNavigation(queryBuilder.value)\n    );\n    return { navigation };\n  },\n  /**\n   * Navigation empty fallback\n   * @slot empty\n   */\n  render(ctx) {\n    const slots = useSlots();\n    const { navigation } = ctx;\n    const renderLink = (link) => h(NuxtLink, { to: link._path }, () => link.title);\n    const renderLinks = (data, level) => h(\n      \"ul\",\n      level ? { \"data-level\": level } : null,\n      data.map((link) => {\n        if (link.children) {\n          return h(\"li\", null, [renderLink(link), renderLinks(link.children, level + 1)]);\n        }\n        return h(\"li\", null, renderLink(link));\n      })\n    );\n    const defaultNode = (data) => renderLinks(data, 0);\n    return slots?.default ? slots.default({ navigation, ...this.$attrs }) : defaultNode(navigation);\n  }\n});\nexport default ContentNavigation;\n</script>\n"],"names":["useContent","NuxtLink"],"mappings":"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","x_google_ignoreList":[0,1,2]}